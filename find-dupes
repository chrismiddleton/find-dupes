#!/usr/bin/env bash

describe_identical_files () {
	local dir="$1"
	local f1="$2"
	local f2="$3"
	local full="$4"
	local escape="$5"
	if [ "x$escape" = "x1" ] ; then
		f1="$(printf '%q' "$f1")"
		f2="$(printf '%q' "$f2")"
	fi
	local dir_escaped="$(echo "$dir" | sed -e 's/[]\/$*.^[]/\\&/g')"
	local f1_relative="$(echo "$f1" | sed 's/^'"$dir_escaped"'//g' | sed 's/^\///g')"
	local f2_relative="$(echo "$f2" | sed 's/^'"$dir_escaped"'//g' | sed 's/^\///g')"
	echo "Identical:"
	printf "%s\n" "$f1_relative"
	printf "%s\n" "$f2_relative"
	echo
	# if [ "x$full" != "x1" ] && [ "x$(dirname "$f1")" = "x$(dirname "$f2")" ] ; then
	# 	echo "$(dirname "$f1"): $(basename "$f1") and $(basename "$f2") are identical"
	# else
	# 	echo "$f1 and $f2 are identical"
	# fi
}

full=0
escape=0
extra_find_args=()
positional_args=()
while (($# > 0)) ; do
	case "$1" in
		--full)
			full=1
			shift
			;;
		--escape)
			escape=1
			shift
			;;
		--exclude|-x)
			shift
			extra_find_args+=(-not -path "$1")
			shift
			;;
		--)
			break
			;;
		*)
			positional_args+=("$1")
			shift
			;;
	esac
done

if [ ${#positional_args[@]} -gt 1 ] ; then
	echo "Too many positional arguments" >&2
	exit 1
fi

dir="${positional_args[0]}"

if [ "x$dir" = "x" ] ; then
	dir=.
fi

find_command=(find "$dir" -type f -not -path '*/\.*' -not -path . "${extra_find_args[@]}" -print0)

# adapted from: https://stackoverflow.com/a/8214748/2407870
# Note: the second "-not -path ." appears to be necessary if the target directory is "."
files=()
while IFS= read -d $'\0' -r f ; do
	files+=("$f")
done < <("${find_command[@]}")

find_identical_files() {
	local dir="$1"
	local full="$2"
	local escape="$3"
	shift
	local files=("$@")
	# find identical files
	local i=0
	local identical_count=0
	local j=0
	while ((i < ${#files[@]})) ; do
        	if ! [ -e "${files[$i]}" ] ; then
			i=$(($i + 1))
                	continue
        	fi
        	j=$(($i + 1))
        	while ((j < ${#files[@]})) ; do
        	        if ! [ -e "${files[$j]}" ] ; then
        	                continue
        	        fi
        	        f1="${files[$i]}"
        	        f2="${files[$j]}"
        	        if diff -q "$f1" "$f2" > /dev/null 2>&1 ; then
        	                identical_count=$((identical_count + 1))
				echo "$f1||||$f2"
        	                # describe_identical_files "$dir" "$f1" "$f2" "$full" "$escape"
        	        fi
        	        j=$(($j + 1))
        	done
        	i=$(($i + 1))
	done
}

result="$(find_identical_files "$dir" "$full" "$escape" "${files[@]}")"

identical_count_str="$(echo "$result" | wc -l)"                                                                                                                                                                                          
identical_count=$(expr $identical_count_str + 0)

if ((identical_count > 0)) ; then
	echo "Identical files:"
	echo "$result" | sort -f | sed -E 's/^(.*)\|\|\|\|(.*)$/\1\n\2\n/g'    
	echo "Found $identical_count pairs of identical files"
else
	echo "No identical files found"
fi
